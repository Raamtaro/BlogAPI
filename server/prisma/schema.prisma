// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())
  email String @unique
  password String
  name String?
  role Role @default(USER)
  posts Posts[]
  comments Comments[]
  
}

model Posts {
  id Int @id @default(autoincrement())
  title String
  author User @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())
  published Boolean @default(false)
  body String
  comments Comments[]

}

model Comments {
  id Int @id @default(autoincrement())
  author User @relation(fields: [authorId], references: [id], onDelete: Cascade)
  post Posts @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId Int
  authorId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())
}

enum Role {
  USER
  ADMIN
}